use anyhow::Result;
use clap::Clap;
use env_logger::Env;
#[allow(unused)]
use log::{debug, error, info, trace, warn};
use std::collections::HashMap;
use std::net::{Ipv4Addr, UdpSocket};
use std::thread::sleep;
use std::time::Duration;

#[derive(Clap, Debug)]
struct Opts {
    #[clap(long, default_value = "192.168.100.1")]
    pub hub: Ipv4Addr,
    #[clap(long, default_value = "10")]
    pub max_retries: usize,
    #[clap(long, default_value = "[::1]:8086")]
    pub influxdb: String,
}

#[derive(Debug)]
struct DownstreamChannel {
    channel: usize,
    frequency: u64,
    power: i32,
    snr: i32,
    id: usize,
    rx_mer: i32,
    pre_rs_err: usize,
    post_rs_err: usize,
}

#[derive(Debug)]
struct UpstreamChannel {
    channel: usize,
    id: usize,
    frequency: u64,
    power: i32,
    symbol_rate: usize,
    unk_1: i32,
    unk_2: i32,
    unk_3: i32,
    unk_4: i32,
}

#[derive(Debug)]
struct Stats {
    pub retries: usize,
    pub config_file: String,
    pub downstream_channels: Vec<DownstreamChannel>,
    pub upstream_channels: Vec<UpstreamChannel>,
}

impl Stats {
    pub fn from_str(json: &str, retries: usize) -> Result<Self> {
        let mut data: HashMap<String, String> = serde_json::from_str(json)?;

        let config_file =
            data.remove("1.3.6.1.2.1.69.1.4.5.0").unwrap_or_default();

        let mut downstream_channels = Vec::with_capacity(24);
        for channel in 1..=24 {
            let frequency = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.1.1.2.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let snr = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.1.1.4.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let power = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.1.1.6.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let id = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.1.1.1.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let rx_mer = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.4.1.5.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let pre_rs_err = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.4.1.3.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let post_rs_err = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.4.1.4.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            downstream_channels.push(DownstreamChannel {
                channel,
                frequency,
                power,
                snr,
                id,
                rx_mer,
                pre_rs_err,
                post_rs_err,
            });
        }

        let mut upstream_channels = Vec::with_capacity(4);
        for channel in 1..=4 {
            let id = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.2.1.1.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let frequency = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.2.1.2.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let power = data
                .remove(&format!("1.3.6.1.4.1.4491.2.1.20.1.2.1.1.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let symbol_rate = data
                .remove(&format!(
                    "1.3.6.1.4.1.4115.1.3.4.1.9.2.1.2.{}",
                    channel
                ))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let unk_1 = data
                .remove(&format!("1.3.6.1.2.1.10.127.1.1.2.1.15.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let unk_2 = data
                .remove(&format!(
                    "1.3.6.1.4.1.4115.1.3.4.1.9.2.1.3.{}",
                    channel
                ))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let unk_3 = data
                .remove(&format!("1.3.6.1.4.1.4491.2.1.20.1.2.1.2.{}", channel))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            let unk_4 = data
                .remove(&format!(
                    "1.3.6.1.4.1.4491.2.1.20.1.2.1.3.1{}",
                    channel
                ))
                .map(|a| a.parse().unwrap())
                .unwrap_or_default();

            upstream_channels.push(UpstreamChannel {
                channel,
                id,
                frequency,
                power,
                symbol_rate,
                unk_1,
                unk_2,
                unk_3,
                unk_4,
            });
        }

        Ok(Self {
            retries,
            config_file,
            downstream_channels,
            upstream_channels,
        })
    }

    pub fn udp_msgs(&self) -> Vec<String> {
        let mut msgs = Vec::new();

        msgs.push(format!("virgin-hub retries={}", self.retries));

        let ds_header = "virgin-hub,chan-type=downstream,id=";

        for chan in &self.downstream_channels {
            msgs.push(format!(
                concat!(
                    "{}{} ",
                    "frequency={},power={},snr={},",
                    "rx-mer={},pre_rs_err={},post_rs_err={}"
                ),
                ds_header,
                chan.id,
                chan.frequency,
                chan.power,
                chan.snr,
                chan.rx_mer,
                chan.pre_rs_err,
                chan.post_rs_err
            ));
        }

        let us_header = "virgin-hub,chan-type=upstream,id=";

        for chan in &self.upstream_channels {
            msgs.push(format!(
                concat!(
                    "{}{} ",
                    "frequency={},power={},symbol-rate={},",
                    "unk-1={},unk-2={},unk-3={},unk-4={}"
                ),
                us_header,
                chan.id,
                chan.frequency,
                chan.power,
                chan.symbol_rate,
                chan.unk_1,
                chan.unk_2,
                chan.unk_3,
                chan.unk_4
            ));
        }

        msgs
    }
}

fn main() -> Result<()> {
    env_logger::Builder::from_env(Env::default().default_filter_or("info"))
        .init();
    let opts = Opts::parse();
    info!("Run with options:\n{:?}", opts);

    let hub_url = format!("http://{}/getRouterStatus", opts.hub);

    let client = reqwest::blocking::Client::builder()
        .connect_timeout(Duration::from_secs(300))
        .build()?;

    for attempt in 0..opts.max_retries {
        info!(
            "Connection attempt {} of {}...",
            attempt + 1,
            opts.max_retries
        );

        match client.get(&hub_url).send() {
            Ok(response) => {
                // came back!
                let body = response.text()?;
                info!("Response: {}", body);
                let stats = Stats::from_str(&body, attempt)?;

                info!("Sending to influxdb...");
                let socket = UdpSocket::bind("[::]:8086")?;
                socket.connect(opts.influxdb)?;
                for msg in stats.udp_msgs() {
                    socket.send(&msg.as_bytes())?;
                }
                info!("Send complete!");
                break;
            }
            Err(e) => {
                warn!("Request error: {}", e);
            }
        }
        sleep(Duration::from_secs(5));
    }

    Ok(())
}

#[cfg(test)]
mod test {
    use super::*;

    #[test]
    fn test_deserialise() {
        let input = r#"
{"1.3.6.1.4.1.4115.1.3.4.1.5.9.0":"10",
"1.3.6.1.4.1.4115.1.3.3.1.1.1.3.1.0":"1",
"1.3.6.1.4.1.4491.2.1.14.1.5.4.0":"1",
"1.3.6.1.2.1.10.127.1.1.5.0":"4",
"1.3.6.1.2.1.126.1.1.1.1.1.2":"1",
"1.3.6.1.2.1.69.1.4.5.0":"cmreg-vmdg000-bbt000+voc-b.cm",
"1.3.6.1.2.1.10.127.1.1.4.1.3.1":"45",
"1.3.6.1.2.1.10.127.1.1.4.1.4.1":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.1":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.1":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.2":"34",
"1.3.6.1.2.1.10.127.1.1.4.1.4.2":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.2":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.2":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.3":"27",
"1.3.6.1.2.1.10.127.1.1.4.1.4.3":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.3":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.3":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.4":"51",
"1.3.6.1.2.1.10.127.1.1.4.1.4.4":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.4":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.4":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.5":"21",
"1.3.6.1.2.1.10.127.1.1.4.1.4.5":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.5":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.5":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.6":"30",
"1.3.6.1.2.1.10.127.1.1.4.1.4.6":"14",
"1.3.6.1.2.1.10.127.1.1.4.1.5.6":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.6":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.7":"31",
"1.3.6.1.2.1.10.127.1.1.4.1.4.7":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.7":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.7":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.8":"28",
"1.3.6.1.2.1.10.127.1.1.4.1.4.8":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.8":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.8":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.9":"42",
"1.3.6.1.2.1.10.127.1.1.4.1.4.9":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.9":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.9":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.10":"32",
"1.3.6.1.2.1.10.127.1.1.4.1.4.10":"31",
"1.3.6.1.2.1.10.127.1.1.4.1.5.10":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.10":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.11":"38",
"1.3.6.1.2.1.10.127.1.1.4.1.4.11":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.11":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.11":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.12":"56",
"1.3.6.1.2.1.10.127.1.1.4.1.4.12":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.12":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.12":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.13":"30",
"1.3.6.1.2.1.10.127.1.1.4.1.4.13":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.13":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.13":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.14":"51",
"1.3.6.1.2.1.10.127.1.1.4.1.4.14":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.14":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.14":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.15":"37",
"1.3.6.1.2.1.10.127.1.1.4.1.4.15":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.15":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.15":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.16":"37",
"1.3.6.1.2.1.10.127.1.1.4.1.4.16":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.16":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.16":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.17":"53",
"1.3.6.1.2.1.10.127.1.1.4.1.4.17":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.17":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.17":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.18":"62",
"1.3.6.1.2.1.10.127.1.1.4.1.4.18":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.18":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.18":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.19":"35",
"1.3.6.1.2.1.10.127.1.1.4.1.4.19":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.19":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.19":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.20":"19",
"1.3.6.1.2.1.10.127.1.1.4.1.4.20":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.20":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.20":"409",
"1.3.6.1.2.1.10.127.1.1.4.1.3.21":"43",
"1.3.6.1.2.1.10.127.1.1.4.1.4.21":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.21":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.21":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.22":"28",
"1.3.6.1.2.1.10.127.1.1.4.1.4.22":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.22":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.22":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.23":"49",
"1.3.6.1.2.1.10.127.1.1.4.1.4.23":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.23":"403",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.23":"403",
"1.3.6.1.2.1.10.127.1.1.4.1.3.24":"16",
"1.3.6.1.2.1.10.127.1.1.4.1.4.24":"0",
"1.3.6.1.2.1.10.127.1.1.4.1.5.24":"409",
"1.3.6.1.4.1.4491.2.1.20.1.24.1.1.24":"409",
"1.3.6.1.2.1.10.127.1.1.1.1.1.1":"9",
"1.3.6.1.2.1.10.127.1.1.1.1.2.1":"203000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.1":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.1":"61",
"1.3.6.1.2.1.10.127.1.1.1.1.1.2":"10",
"1.3.6.1.2.1.10.127.1.1.1.1.2.2":"211000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.2":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.2":"60",
"1.3.6.1.2.1.10.127.1.1.1.1.1.3":"11",
"1.3.6.1.2.1.10.127.1.1.1.1.2.3":"219000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.3":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.3":"56",
"1.3.6.1.2.1.10.127.1.1.1.1.1.4":"12",
"1.3.6.1.2.1.10.127.1.1.1.1.2.4":"227000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.4":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.4":"51",
"1.3.6.1.2.1.10.127.1.1.1.1.1.5":"13",
"1.3.6.1.2.1.10.127.1.1.1.1.2.5":"235000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.5":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.5":"49",
"1.3.6.1.2.1.10.127.1.1.1.1.1.6":"14",
"1.3.6.1.2.1.10.127.1.1.1.1.2.6":"243000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.6":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.6":"48",
"1.3.6.1.2.1.10.127.1.1.1.1.1.7":"15",
"1.3.6.1.2.1.10.127.1.1.1.1.2.7":"251000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.7":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.7":"49",
"1.3.6.1.2.1.10.127.1.1.1.1.1.8":"16",
"1.3.6.1.2.1.10.127.1.1.1.1.2.8":"259000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.8":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.8":"51",
"1.3.6.1.2.1.10.127.1.1.1.1.1.9":"17",
"1.3.6.1.2.1.10.127.1.1.1.1.2.9":"267000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.9":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.9":"53",
"1.3.6.1.2.1.10.127.1.1.1.1.1.10":"18",
"1.3.6.1.2.1.10.127.1.1.1.1.2.10":"275000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.10":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.10":"54",
"1.3.6.1.2.1.10.127.1.1.1.1.1.11":"19",
"1.3.6.1.2.1.10.127.1.1.1.1.2.11":"283000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.11":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.11":"45",
"1.3.6.1.2.1.10.127.1.1.1.1.1.12":"20",
"1.3.6.1.2.1.10.127.1.1.1.1.2.12":"291000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.12":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.12":"53",
"1.3.6.1.2.1.10.127.1.1.1.1.1.13":"21",
"1.3.6.1.2.1.10.127.1.1.1.1.2.13":"299000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.13":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.13":"55",
"1.3.6.1.2.1.10.127.1.1.1.1.1.14":"22",
"1.3.6.1.2.1.10.127.1.1.1.1.2.14":"307000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.14":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.14":"58",
"1.3.6.1.2.1.10.127.1.1.1.1.1.15":"23",
"1.3.6.1.2.1.10.127.1.1.1.1.2.15":"315000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.15":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.15":"59",
"1.3.6.1.2.1.10.127.1.1.1.1.1.16":"24",
"1.3.6.1.2.1.10.127.1.1.1.1.2.16":"323000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.16":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.16":"63",
"1.3.6.1.2.1.10.127.1.1.1.1.1.17":"25",
"1.3.6.1.2.1.10.127.1.1.1.1.2.17":"331000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.17":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.17":"61",
"1.3.6.1.2.1.10.127.1.1.1.1.1.18":"26",
"1.3.6.1.2.1.10.127.1.1.1.1.2.18":"339000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.18":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.18":"58",
"1.3.6.1.2.1.10.127.1.1.1.1.1.19":"27",
"1.3.6.1.2.1.10.127.1.1.1.1.2.19":"347000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.19":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.19":"53",
"1.3.6.1.2.1.10.127.1.1.1.1.1.20":"28",
"1.3.6.1.2.1.10.127.1.1.1.1.2.20":"355000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.20":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.20":"48",
"1.3.6.1.2.1.10.127.1.1.1.1.1.21":"29",
"1.3.6.1.2.1.10.127.1.1.1.1.2.21":"363000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.21":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.21":"45",
"1.3.6.1.2.1.10.127.1.1.1.1.1.22":"30",
"1.3.6.1.2.1.10.127.1.1.1.1.2.22":"371000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.22":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.22":"45",
"1.3.6.1.2.1.10.127.1.1.1.1.1.23":"31",
"1.3.6.1.2.1.10.127.1.1.1.1.2.23":"379000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.23":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.23":"45",
"1.3.6.1.2.1.10.127.1.1.1.1.1.24":"32",
"1.3.6.1.2.1.10.127.1.1.1.1.2.24":"387000000",
"1.3.6.1.2.1.10.127.1.1.1.1.4.24":"4",
"1.3.6.1.2.1.10.127.1.1.1.1.6.24":"40",
"1.3.6.1.2.1.10.127.1.1.2.1.1.1":"1",
"1.3.6.1.2.1.10.127.1.1.2.1.2.1":"60300000",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.1.1":"463",
"1.3.6.1.2.1.10.127.1.1.2.1.15.1":"2",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.2.1":"5120",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.3.1":"5",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.2.1":"0",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.3.1":"0",
"1.3.6.1.2.1.10.127.1.1.2.1.1.2":"2",
"1.3.6.1.2.1.10.127.1.1.2.1.2.2":"53700000",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.1.2":"455",
"1.3.6.1.2.1.10.127.1.1.2.1.15.2":"2",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.2.2":"5120",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.3.2":"5",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.2.2":"0",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.3.2":"0",
"1.3.6.1.2.1.10.127.1.1.2.1.1.3":"3",
"1.3.6.1.2.1.10.127.1.1.2.1.2.3":"46200000",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.1.3":"450",
"1.3.6.1.2.1.10.127.1.1.2.1.15.3":"2",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.2.3":"5120",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.3.3":"5",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.2.3":"0",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.3.3":"0",
"1.3.6.1.2.1.10.127.1.1.2.1.1.4":"4",
"1.3.6.1.2.1.10.127.1.1.2.1.2.4":"39400000",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.1.4":"445",
"1.3.6.1.2.1.10.127.1.1.2.1.15.4":"2",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.2.4":"5120",
"1.3.6.1.4.1.4115.1.3.4.1.9.2.1.3.4":"5",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.2.4":"0",
"1.3.6.1.4.1.4491.2.1.20.1.2.1.3.4":"0",
"1.3.6.1.4.1.4115.1.3.4.1.1.12.0":"9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,1,2,3,4",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.1.229433":"38500089",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.1.229433":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.1.229433":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.1.229433":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.1.229433":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.1.229434":"402500089",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.1.229434":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.1.229434":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.1.229434":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.1.229434":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.1.229435":"5250065",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.1.229435":"16320",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.1.229435":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.1.229435":"16320",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.1.229435":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.1.229436":"128000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.1.229436":"3044",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.1.229436":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.1.229436":"1522",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.1.229436":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.1.229437":"55000065",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.1.229437":"10000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.1.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.1.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.1.229437":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.1.229438":"128000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.1.229438":"3044",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.1.229438":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.1.229438":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.1.229438":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.2.229433":"38500089",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.2.229433":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.2.229433":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.2.229433":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.2.229433":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.2.229434":"402500089",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.2.229434":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.2.229434":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.2.229434":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.2.229434":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.2.229435":"5250065",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.2.229435":"16320",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.2.229435":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.2.229435":"16320",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.2.229435":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.2.229436":"128000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.2.229436":"3044",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.2.229436":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.2.229436":"1522",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.2.229436":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.2.229437":"55000065",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.2.229437":"10000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.2.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.2.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.2.229437":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.2.229438":"128000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.2.229438":"3044",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.2.229438":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.2.229438":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.2.229438":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.3.229433":"38500089",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.3.229433":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.3.229433":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.3.229433":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.3.229433":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.3.229434":"402500089",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.3.229434":"42600",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.3.229434":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.3.229434":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.3.229434":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.3.229435":"5250065",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.3.229435":"16320",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.3.229435":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.3.229435":"16320",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.3.229435":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.3.229436":"128000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.3.229436":"3044",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.3.229436":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.3.229436":"1522",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.3.229436":"2",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.3.229437":"55000065",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.3.229437":"10000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.3.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.3.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.3.229437":"1",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.6.2.3.229438":"128000",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.7.2.3.229438":"3044",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.8.2.3.229438":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.12.2.3.229438":"0",
"1.3.6.1.4.1.4491.2.1.21.1.2.1.13.2.3.229438":"1",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.7.2.1.229433":"2",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.8.2.1.229433":"1",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.7.2.2.229434":"1",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.8.2.2.229434":"1",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.7.2.3.229435":"2",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.8.2.3.229435":"0",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.7.2.4.229436":"2",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.8.2.4.229436":"0",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.7.2.5.229437":"1",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.8.2.5.229437":"0",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.7.2.6.229438":"1",
"1.3.6.1.4.1.4491.2.1.21.1.3.1.8.2.6.229438":"0",
"1.3.6.1.2.1.69.1.5.8.1.2.1":"25/04/2021 16:24:48",
"1.3.6.1.2.1.69.1.5.8.1.5.1":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.1":"No Ranging Response received - ;",
"1.3.6.1.2.1.69.1.5.8.1.2.2":"28/04/2021 05:50:57",
"1.3.6.1.2.1.69.1.5.8.1.5.2":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.2":"DHCP RENEW WARNING - Field invalid in response v4 option;0;",
"1.3.6.1.2.1.69.1.5.8.1.2.3":"01/01/1970 00:01:42",
"1.3.6.1.2.1.69.1.5.8.1.5.3":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.3":"No Ranging Response received - T3 time-out;;",
"1.3.6.1.2.1.69.1.5.8.1.2.4":"01/05/2021 17:55:29",
"1.3.6.1.2.1.69.1.5.8.1.5.4":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.4":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.5":"01/05/2021 18:32:57",
"1.3.6.1.2.1.69.1.5.8.1.5.5":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.5":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.6":"05/05/2021 07:27:56",
"1.3.6.1.2.1.69.1.5.8.1.5.6":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.6":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.7":"06/05/2021 08:42:43",
"1.3.6.1.2.1.69.1.5.8.1.5.7":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.7":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.8":"08/05/2021 19:11:42",
"1.3.6.1.2.1.69.1.5.8.1.5.8":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.8":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.9":"09/05/2021 19:56:26",
"1.3.6.1.2.1.69.1.5.8.1.5.9":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.9":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.10":"12/05/2021 07:11:42",
"1.3.6.1.2.1.69.1.5.8.1.5.10":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.10":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.11":"13/05/2021 02:33:31",
"1.3.6.1.2.1.69.1.5.8.1.5.11":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.11":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.12":"15/05/2021 19:11:43",
"1.3.6.1.2.1.69.1.5.8.1.5.12":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.12":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.13":"16/05/2021 09:03:45",
"1.3.6.1.2.1.69.1.5.8.1.5.13":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.13":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.14":"24/05/2021 14:35:45",
"1.3.6.1.2.1.69.1.5.8.1.5.14":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.14":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.15":"25/05/2021 10:58:10",
"1.3.6.1.2.1.69.1.5.8.1.5.15":"6",
"1.3.6.1.2.1.69.1.5.8.1.7.15":"LAN login Success;",
"1.3.6.1.2.1.69.1.5.8.1.2.16":"25/05/2021 15:08:26",
"1.3.6.1.2.1.69.1.5.8.1.5.16":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.16":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.17":"27/05/2021 22:57:53",
"1.3.6.1.2.1.69.1.5.8.1.5.17":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.17":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.18":"30/05/2021 13:02:25",
"1.3.6.1.2.1.69.1.5.8.1.5.18":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.18":"No Ranging Response received - T3 time-out;",
"1.3.6.1.2.1.69.1.5.8.1.2.19":"31/05/2021 10:57:53",
"1.3.6.1.2.1.69.1.5.8.1.5.19":"4",
"1.3.6.1.2.1.69.1.5.8.1.7.19":"DHCP RENEW WARNING - Field invalid in response v4 option;",
"1.3.6.1.2.1.69.1.5.8.1.2.20":"31/05/2021 16:10:12",
"1.3.6.1.2.1.69.1.5.8.1.5.20":"3",
"1.3.6.1.2.1.69.1.5.8.1.7.20":"No Ranging Response received - T3 time-out;",
"1.3.6.1.4.1.4115.1.20.1.1.1.7.1.3.1":"0.0.0.0",
"1.3.6.1.4.1.4115.1.20.1.1.1.7.1.3.2":"::",
"1.3.6.1.4.1.4115.1.3.3.1.1.1.3.2.0":"1",
"1.3.6.1.4.1.4115.1.3.4.1.4.3.2.0":"10.1.2.3",
"1":"Finish"
}
        "#;

        let parsed = Stats::from_str(input, 1).unwrap();
        assert_eq!(parsed.config_file, "cmreg-vmdg000-bbt000+voc-b.cm");

        println!("stats: {:?}", parsed);
        println!("\n\n\nmessages:");
        for msg in parsed.udp_msgs() {
            println!("{}", msg);
        }
        //panic!();
    }
}
